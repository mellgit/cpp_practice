#include <iostream>
#include <string>
using namespace std;

int main()
{
    /*
    двусвязный список схож с односвязным
    их исопльзование зависит от задачи
    двусвязный чуть быстрее засчет своего двунаправленного взаимодестивия 
    писать их постоянно не обязательно, тк есть библиотека STL


    бинарное дерево - упорядочная структура данных для быстрого поиска элемента (бинарный поиск)
    тк у списков всегда бы пришлось искать либо сначала(односвязный), либо с конца (двусвязный)
    у родителя мб только два потомка, если потомков нет,
    то такие элементы называются литьями
    слева всегда значение меньше корня, справа всегда больше
                50
            45       55
        1     49    51   
         30  46       53
    элемент дерева это индекс, под которым лежат данные
    индекс всегда должен быть уникальным


    стек - коллекция состоящая из элементов, организованная на принципе "последни вошел, первый вышел" (LIFO)
    можно добавлять или извлекать элементы, но только с вершины(последний объект добавленный в стек), 
    тк из середины или начала, сделать это нельзя
    перебирать элементы нельзя

    очередь - структура данных "первый вошел, первый вышел" (FIFO)
    итерироваться или вставить в очередь нельзя, можно только добавлять или извлекать
    элемент всегда добавляеться в конец очереди, извлекаются только сначала
    доступ к элементам только в том порядке, в котором они поступали 

    кольцевая очередь - после использования первого элемента, этот же элемент добавляется снова в конец очереди
    очередь с приоритетом - у каждого элемента есть приоритет взаимодествия 
    те в очереди есть свои под очереди, со своим приоритетом
        1-1-1   2-2   3-3-3
    сортируются либо перед тем, как попасть в очередь, либо внутри самой очереди
    */
    return 0;
}